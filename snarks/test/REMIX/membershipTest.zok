//from "hashes/mimc7/mimc7R10" import main as hash
import "./mimc-hash" as hash
import "hashes/utils/256bitsDirectionHelper" as multiplex

// Merke-Tree inclusion proof for tree depth 3 using SNARK efficient pedersen hashes
// directionSelector => TRUE if current digest is on the rhs of the hash
/*
DApp Function for COMPUTING WITNESS
array[] merkleArray;


listOfNodes, rootNode, provingKey = Election.deployed().then(function(instance) { instance.getMerkleInfo(voteKey) } );
value = oneWayHash(secretKey);
if(index mod 2 == 0) : The index is on the left node
{
	value = hash(value, merkleArray[index+1]);
} else {
	value = hash(merkleArray[index-1], value);
}
index div 2 Drop a layer 



SPONGE TAKES A FIELD ARRAY OF TWO VALUES AS INPUT, SO FOR THE INPUT SECRETKEY, SECRETKEY IS PAIRED WITH 0 TO PERFORM INITIAL HASH


 A node is represented as a number defined over a large 'field'; 
 
INPUT: 
PRIVATE Users Secret Key
PUBLIC Merkle Root,
PRIVATE directionSelecter Array[layers-1] containing boolean values to determine hashing order. T = Right, F = Left
PUBLIC siblingNodes Array is of size treeDepth - 1
N ==> Number of Layers -1 
*/	



def main(private field  secretKey, field merkleRoot, private bool[2]  directionSelector, field[2] siblingNodes):


    field currentNode = hash([secretKey,0])
     //Pair hash the secretKey with a static value, select k = 10 (k iterations of Feistel will take place)
    for field i in 0..2 do
    //Both If conditions are executed regardless of assertion due to the nature of a circuit and no jumps. 
    //more ifs = more constraints
    /* The currentNodes index is a right child*/                                    /* The currentNodes index is a left child*/
    currentNode = if directionSelector[i] == true then hash([siblingNodes[i],currentNode]) else hash([currentNode, siblingNodes[i]]) fi
    endfor
    assert(merkleRoot == currentNode)
    return
    


    /* 

    <============ TEST INPUTS ========>

    SNARK CIRCUIT
    input: 1337 0
    expected output: 279068567919286272405494692370356718356607598444672844562570709048854917873
    
    SOLIDITY/EVM
    input: [1337, 0]
    result: 279068567919286272405494692370356718356607598444672844562570709048854917873
    

    <============ TEST MERKLE INPUTS =============> 
    secretKey 1337, directionSelector [false, false], siblings [B, F]

    zokrates compute-witness -i membershipTestBinary -a 1337 5060062225424388734389759152160062682747827599832181989797835757669867179676 false false 19853509215178435906716469440873614721263411410499278547942821068637929368169 11936978041327493557427855138026614631793000519284997469319642252674780975577
    zokrates compute-witness --abi-spec \test\membershipTestABI.json -i membershipTest_Binary -o \witness-files\membershipTest_Witness
    zokrates compute-witness -i membershipTestBinary --abi ["1337", "5060062225424388734389759152160062682747827599832181989797835757669867179676", [false,false],["19853509215178435906716469440873614721263411410499278547942821068637929368169","11936978041327493557427855138026614631793000519284997469319642252674780975577"]]
    <============ TEST MERKLE TREE ===============>
    
    
    
    <============ SECRET KEYS AND FIRST LAYER ==============>
    
    SECREKEY 1337 HASH-A (left child) 279068567919286272405494692370356718356607598444672844562570709048854917873

    SECRETKEY 69 HASH-B (right child) 19853509215178435906716469440873614721263411410499278547942821068637929368169

    SECRETKEY 420 HASH-C (left child) 3181560448192751507953874194505803391543481713828825018922585520393189659867

    SECRETKEY 7 HASH-D (right child) 1185539502319573937128868532294662895325164579063707179200953957722766982281



    <========== SECOND LAYER =========================>

    HASH(A,B) = HASH-E (left child) 3881569319683083024557885678981387131575202423528842898900988355316615579154

    hash(C,D) = HASH-F  (right child) 11936978041327493557427855138026614631793000519284997469319642252674780975577

    <===== MERKLE ROOT ====>

    HASH(E,F) = MERKLE ROOT = 5060062225424388734389759152160062682747827599832181989797835757669867179676

    */